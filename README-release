Here are most of the steps we (maintainers) follow when making a release.

* start from a clean, up-to-date git directory.

    git checkout master; git pull

* Run ./configure && make maintainer-clean

* Ensure that the desired versions of autoconf, automake, bison, etc.
  are in your PATH.  See the buildreq list in bootstrap.conf for
  the complete list.

* Ensure that you're on "master" with no uncommitted diffs.
  This should produce no output: git checkout master; git diff

* Run bootstrap: ./bootstrap

FIXME: enable excluded programs like arch? to get their manual pages?

* Pre-release testing:
  Ensure that make check syntax-check succeeds.
  On at least one SELinux-enabled (enforcing) and one non-SELinux system,
    run all tests, both root-only and regular.
  Run *all* non-root tests, including expensive and very expensive ones i.e.,
    run this: make -j1 check RUN_VERY_EXPENSIVE_TESTS=yes RUN_EXPENSIVE_TESTS=yes

  Run the root-only tests:
  sudo env PATH="$PATH" NON_ROOT_USERNAME=$USER make -k check-root

* Run "make distcheck"

* Manually set the date, version number, and [stable/alpha/beta] on
  line 3 of NEWS, then do e.g.,:

    v=8.0
    pkg=$(sed -n 's/^PACKAGE = \(.*\)/\1/p' Makefile)
    git commit -F <(printf 'version '$v'\n\n* NEWS: Record release date.\n') -a
    git tag -s -m "$pkg $v" v$v HEAD

* Run the following to create release tarballs.  Your choice selects the
  corresponding upload-to destination in the emitted gnupload command.
  The different destinations are specified in cfg.mk.  See the definitions
  of gnu_ftp_host-{alpha,beta,stable}.

    # "TYPE" must be stable, beta or alpha
    make TYPE

* Test the tarball.  copy it to a few odd-ball systems and ensure that
  it builds and passes all tests.

* While that's happening, write the release announcement that you will
  soon post.

Once all the builds and tests have passed,

* Run the gnupload command that was suggested by your "make major" run above.

* Wait a few minutes (maybe up to 30?) and then use the release URLs to
  download all tarball/signature pairs and use gpg --verify to ensure
  that they're all valid.

* Push the new tag:

    v=$(cat .prev-version)
    git push origin tag v$v

* Send the gpg-signed announcement mail, e.g.,

    To: info-gnu@gnu.org, coreutils-announce@gnu.org
    Cc: coordinator@translationproject.org, bug-coreutils@gnu.org
    Subject: coreutils-8.0 released [beta]

* Approve the announcement here:
  http://lists.gnu.org/mailman/admindb/coreutils-announce

* Announce it on Savannah, too:
  From here:
    https://savannah.gnu.org/projects/coreutils/
  click on the "submit news", then write something like the following:
  (If there is no such button, then enable "News" for the project via
   the Main -> "Select Features" menu item, or via this link:
   https://savannah.gnu.org/project/admin/editgroupfeatures.php?group=gzip)

    Subject: coreutils-0.0 released [beta]
    The announcement is here:
      http://article.gmane.org/gmane.comp.gnu.core-utils.announce/54

  Then go here to approve it:
    https://savannah.gnu.org/news/approve.php?group=coreutils

* After each non-alpha release, update the on-line manual accessible via

    http://www.gnu.org/software/coreutils/manual/

  by running this:

    build-aux/gnu-web-doc-update
