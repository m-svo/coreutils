#!/bin/sh

: ${PERL=perl}

case "$PERL" in
  *'missing perl')
  echo 1>&2 "$0: configure didn't find a usable version of Perl, so can't run thi
s test"
  exit 77
  ;;
esac

exec $PERL -w -- - <<\EOF

# Ensure that cat exits upon a single EOF (^D) from a tty.
use strict;

(my $ME = $0) =~ s|.*/||;

eval { require Expect };
$@ and (warn "$ME: this script requires Perl's Expect package\n"), exit 77;

{
  my $fail = 0;
  foreach my $cmd (qw(md5sum sha1sum cksum cat))
    {
      my $exp = new Expect;
      $exp->log_user(0);
      $exp->spawn($cmd)
	or (warn "$ME: cannot run `$cmd': $!\n"), $fail=1, next;
      $exp->send("foo\n");
      $exp->send('');  # FIXME: it'd be better not to hard-code ^D here
      $exp->expect (0, '-re', "^foo\\r?\$");
      my $found = $exp->expect (1, '-re', "^.+\$");
      $found and warn "F: $found: " . $exp->exp_match () . "\n";
      $exp->expect(0, 'eof');
      # defined $exp->exitstatus and warn "E: " . $exp->exitstatus . "\n";
      defined $found && defined $exp->exitstatus && $exp->exitstatus == 0
	or (warn "$ME: $cmd didn't exit after ^D from standard input\n"),
	  $fail=1;
      $exp->hard_close();
    }

  exit $fail
}
EOF
