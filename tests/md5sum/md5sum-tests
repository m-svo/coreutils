#! /bin/sh
# This script was generated automatically by build-script.
case $# in
  0) xx='../../src/md5sum';;
  *) xx="$1";;
esac
test "$VERBOSE" && echo=echo || echo=:
$echo testing program: $xx
errors=0
test "$srcdir" || srcdir=.
test "$VERBOSE" && $xx --version 2> /dev/null

# Make sure we get English translations.
LANGUAGE=C
export LANGUAGE
LC_ALL=C
export LC_ALL
LANG=C
export LANG

cat $srcdir/1.I | $xx  > 1.O 2> 1.E
code=$?
if test $code != 0 ; then
  $echo "Test 1(|) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 1.O $srcdir/1.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 1(|)"; fi ;;
    1) $echo "Test 1(|) failed: files 1.O and $srcdir/1.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 1(|) may have failed." 1>&2;
       $echo The command "cmp 1.O $srcdir/1.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 1.E || rm -f 1.E
$xx  < $srcdir/1.I > 1.O 2> 1.E
code=$?
if test $code != 0 ; then
  $echo "Test 1(<) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 1.O $srcdir/1.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 1(<)"; fi ;;
    1) $echo "Test 1(<) failed: files 1.O and $srcdir/1.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 1(<) may have failed." 1>&2;
       $echo The command "cmp 1.O $srcdir/1.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 1.E || rm -f 1.E
cat $srcdir/2.I | $xx  > 2.O 2> 2.E
code=$?
if test $code != 0 ; then
  $echo "Test 2(|) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 2.O $srcdir/2.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 2(|)"; fi ;;
    1) $echo "Test 2(|) failed: files 2.O and $srcdir/2.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 2(|) may have failed." 1>&2;
       $echo The command "cmp 2.O $srcdir/2.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 2.E || rm -f 2.E
$xx  < $srcdir/2.I > 2.O 2> 2.E
code=$?
if test $code != 0 ; then
  $echo "Test 2(<) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 2.O $srcdir/2.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 2(<)"; fi ;;
    1) $echo "Test 2(<) failed: files 2.O and $srcdir/2.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 2(<) may have failed." 1>&2;
       $echo The command "cmp 2.O $srcdir/2.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 2.E || rm -f 2.E
cat $srcdir/3.I | $xx  > 3.O 2> 3.E
code=$?
if test $code != 0 ; then
  $echo "Test 3(|) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 3.O $srcdir/3.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 3(|)"; fi ;;
    1) $echo "Test 3(|) failed: files 3.O and $srcdir/3.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 3(|) may have failed." 1>&2;
       $echo The command "cmp 3.O $srcdir/3.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 3.E || rm -f 3.E
$xx  < $srcdir/3.I > 3.O 2> 3.E
code=$?
if test $code != 0 ; then
  $echo "Test 3(<) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 3.O $srcdir/3.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 3(<)"; fi ;;
    1) $echo "Test 3(<) failed: files 3.O and $srcdir/3.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 3(<) may have failed." 1>&2;
       $echo The command "cmp 3.O $srcdir/3.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 3.E || rm -f 3.E
cat $srcdir/4.I | $xx  > 4.O 2> 4.E
code=$?
if test $code != 0 ; then
  $echo "Test 4(|) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 4.O $srcdir/4.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 4(|)"; fi ;;
    1) $echo "Test 4(|) failed: files 4.O and $srcdir/4.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 4(|) may have failed." 1>&2;
       $echo The command "cmp 4.O $srcdir/4.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 4.E || rm -f 4.E
$xx  < $srcdir/4.I > 4.O 2> 4.E
code=$?
if test $code != 0 ; then
  $echo "Test 4(<) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 4.O $srcdir/4.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 4(<)"; fi ;;
    1) $echo "Test 4(<) failed: files 4.O and $srcdir/4.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 4(<) may have failed." 1>&2;
       $echo The command "cmp 4.O $srcdir/4.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 4.E || rm -f 4.E
cat $srcdir/5.I | $xx  > 5.O 2> 5.E
code=$?
if test $code != 0 ; then
  $echo "Test 5(|) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 5.O $srcdir/5.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 5(|)"; fi ;;
    1) $echo "Test 5(|) failed: files 5.O and $srcdir/5.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 5(|) may have failed." 1>&2;
       $echo The command "cmp 5.O $srcdir/5.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 5.E || rm -f 5.E
$xx  < $srcdir/5.I > 5.O 2> 5.E
code=$?
if test $code != 0 ; then
  $echo "Test 5(<) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 5.O $srcdir/5.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 5(<)"; fi ;;
    1) $echo "Test 5(<) failed: files 5.O and $srcdir/5.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 5(<) may have failed." 1>&2;
       $echo The command "cmp 5.O $srcdir/5.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 5.E || rm -f 5.E
cat $srcdir/6.I | $xx  > 6.O 2> 6.E
code=$?
if test $code != 0 ; then
  $echo "Test 6(|) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 6.O $srcdir/6.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 6(|)"; fi ;;
    1) $echo "Test 6(|) failed: files 6.O and $srcdir/6.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 6(|) may have failed." 1>&2;
       $echo The command "cmp 6.O $srcdir/6.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 6.E || rm -f 6.E
$xx  < $srcdir/6.I > 6.O 2> 6.E
code=$?
if test $code != 0 ; then
  $echo "Test 6(<) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 6.O $srcdir/6.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 6(<)"; fi ;;
    1) $echo "Test 6(<) failed: files 6.O and $srcdir/6.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 6(<) may have failed." 1>&2;
       $echo The command "cmp 6.O $srcdir/6.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 6.E || rm -f 6.E
cat $srcdir/7.I | $xx  > 7.O 2> 7.E
code=$?
if test $code != 0 ; then
  $echo "Test 7(|) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 7.O $srcdir/7.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 7(|)"; fi ;;
    1) $echo "Test 7(|) failed: files 7.O and $srcdir/7.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 7(|) may have failed." 1>&2;
       $echo The command "cmp 7.O $srcdir/7.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 7.E || rm -f 7.E
$xx  < $srcdir/7.I > 7.O 2> 7.E
code=$?
if test $code != 0 ; then
  $echo "Test 7(<) failed: ../../src/md5sum return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp 7.O $srcdir/7.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed 7(<)"; fi ;;
    1) $echo "Test 7(<) failed: files 7.O and $srcdir/7.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test 7(<) may have failed." 1>&2;
       $echo The command "cmp 7.O $srcdir/7.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s 7.E || rm -f 7.E
if test $errors = 0 ; then
  $echo Passed all 14 tests. 1>&2
else
  $echo Failed $errors tests. 1>&2
fi
test $errors = 0 || errors=1
exit $errors
