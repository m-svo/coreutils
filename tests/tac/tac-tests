#! /bin/sh
# This script was generated automatically by build-script.
case $# in
  0) xx='../../src/tac';;
  *) xx="$1";;
esac
test "$VERBOSE" && echo=echo || echo=:
$echo testing program: $xx
errors=0
test "$srcdir" || srcdir=.
test "$VERBOSE" && $xx --version 2> /dev/null

# Make sure we get English translations.
LANGUAGE=C
export LANGUAGE
LC_ALL=C
export LC_ALL
LANG=C
export LANG

$xx  $srcdir/basic-0.I > basic-0.O 2> basic-0.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-0(F) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-0.O $srcdir/basic-0.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-0(F)"; fi ;;
    1) $echo "Test basic-0(F) failed: files basic-0.O and $srcdir/basic-0.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-0(F) may have failed." 1>&2;
       $echo The command "cmp basic-0.O $srcdir/basic-0.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-0.E || rm -f basic-0.E
cat $srcdir/basic-0.I | $xx  > basic-0.O 2> basic-0.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-0(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-0.O $srcdir/basic-0.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-0(|)"; fi ;;
    1) $echo "Test basic-0(|) failed: files basic-0.O and $srcdir/basic-0.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-0(|) may have failed." 1>&2;
       $echo The command "cmp basic-0.O $srcdir/basic-0.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-0.E || rm -f basic-0.E
$xx  < $srcdir/basic-0.I > basic-0.O 2> basic-0.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-0(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-0.O $srcdir/basic-0.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-0(<)"; fi ;;
    1) $echo "Test basic-0(<) failed: files basic-0.O and $srcdir/basic-0.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-0(<) may have failed." 1>&2;
       $echo The command "cmp basic-0.O $srcdir/basic-0.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-0.E || rm -f basic-0.E
cat $srcdir/basic-a.I | $xx  > basic-a.O 2> basic-a.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-a(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-a.O $srcdir/basic-a.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-a(|)"; fi ;;
    1) $echo "Test basic-a(|) failed: files basic-a.O and $srcdir/basic-a.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-a(|) may have failed." 1>&2;
       $echo The command "cmp basic-a.O $srcdir/basic-a.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-a.E || rm -f basic-a.E
$xx  < $srcdir/basic-a.I > basic-a.O 2> basic-a.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-a(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-a.O $srcdir/basic-a.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-a(<)"; fi ;;
    1) $echo "Test basic-a(<) failed: files basic-a.O and $srcdir/basic-a.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-a(<) may have failed." 1>&2;
       $echo The command "cmp basic-a.O $srcdir/basic-a.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-a.E || rm -f basic-a.E
$xx  $srcdir/basic-b.I > basic-b.O 2> basic-b.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-b(F) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-b.O $srcdir/basic-b.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-b(F)"; fi ;;
    1) $echo "Test basic-b(F) failed: files basic-b.O and $srcdir/basic-b.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-b(F) may have failed." 1>&2;
       $echo The command "cmp basic-b.O $srcdir/basic-b.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-b.E || rm -f basic-b.E
cat $srcdir/basic-b.I | $xx  > basic-b.O 2> basic-b.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-b(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-b.O $srcdir/basic-b.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-b(|)"; fi ;;
    1) $echo "Test basic-b(|) failed: files basic-b.O and $srcdir/basic-b.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-b(|) may have failed." 1>&2;
       $echo The command "cmp basic-b.O $srcdir/basic-b.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-b.E || rm -f basic-b.E
$xx  < $srcdir/basic-b.I > basic-b.O 2> basic-b.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-b(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-b.O $srcdir/basic-b.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-b(<)"; fi ;;
    1) $echo "Test basic-b(<) failed: files basic-b.O and $srcdir/basic-b.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-b(<) may have failed." 1>&2;
       $echo The command "cmp basic-b.O $srcdir/basic-b.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-b.E || rm -f basic-b.E
$xx  $srcdir/basic-c.I > basic-c.O 2> basic-c.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-c(F) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-c.O $srcdir/basic-c.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-c(F)"; fi ;;
    1) $echo "Test basic-c(F) failed: files basic-c.O and $srcdir/basic-c.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-c(F) may have failed." 1>&2;
       $echo The command "cmp basic-c.O $srcdir/basic-c.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-c.E || rm -f basic-c.E
cat $srcdir/basic-c.I | $xx  > basic-c.O 2> basic-c.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-c(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-c.O $srcdir/basic-c.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-c(|)"; fi ;;
    1) $echo "Test basic-c(|) failed: files basic-c.O and $srcdir/basic-c.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-c(|) may have failed." 1>&2;
       $echo The command "cmp basic-c.O $srcdir/basic-c.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-c.E || rm -f basic-c.E
$xx  < $srcdir/basic-c.I > basic-c.O 2> basic-c.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-c(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-c.O $srcdir/basic-c.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-c(<)"; fi ;;
    1) $echo "Test basic-c(<) failed: files basic-c.O and $srcdir/basic-c.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-c(<) may have failed." 1>&2;
       $echo The command "cmp basic-c.O $srcdir/basic-c.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-c.E || rm -f basic-c.E
cat $srcdir/basic-d.I | $xx  > basic-d.O 2> basic-d.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-d(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-d.O $srcdir/basic-d.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-d(|)"; fi ;;
    1) $echo "Test basic-d(|) failed: files basic-d.O and $srcdir/basic-d.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-d(|) may have failed." 1>&2;
       $echo The command "cmp basic-d.O $srcdir/basic-d.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-d.E || rm -f basic-d.E
$xx  < $srcdir/basic-d.I > basic-d.O 2> basic-d.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-d(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-d.O $srcdir/basic-d.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-d(<)"; fi ;;
    1) $echo "Test basic-d(<) failed: files basic-d.O and $srcdir/basic-d.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-d(<) may have failed." 1>&2;
       $echo The command "cmp basic-d.O $srcdir/basic-d.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-d.E || rm -f basic-d.E
$xx  $srcdir/basic-e.I > basic-e.O 2> basic-e.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-e(F) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-e.O $srcdir/basic-e.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-e(F)"; fi ;;
    1) $echo "Test basic-e(F) failed: files basic-e.O and $srcdir/basic-e.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-e(F) may have failed." 1>&2;
       $echo The command "cmp basic-e.O $srcdir/basic-e.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-e.E || rm -f basic-e.E
cat $srcdir/basic-e.I | $xx  > basic-e.O 2> basic-e.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-e(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-e.O $srcdir/basic-e.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-e(|)"; fi ;;
    1) $echo "Test basic-e(|) failed: files basic-e.O and $srcdir/basic-e.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-e(|) may have failed." 1>&2;
       $echo The command "cmp basic-e.O $srcdir/basic-e.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-e.E || rm -f basic-e.E
$xx  < $srcdir/basic-e.I > basic-e.O 2> basic-e.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-e(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-e.O $srcdir/basic-e.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-e(<)"; fi ;;
    1) $echo "Test basic-e(<) failed: files basic-e.O and $srcdir/basic-e.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-e(<) may have failed." 1>&2;
       $echo The command "cmp basic-e.O $srcdir/basic-e.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-e.E || rm -f basic-e.E
$xx  $srcdir/basic-f.I > basic-f.O 2> basic-f.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-f(F) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-f.O $srcdir/basic-f.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-f(F)"; fi ;;
    1) $echo "Test basic-f(F) failed: files basic-f.O and $srcdir/basic-f.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-f(F) may have failed." 1>&2;
       $echo The command "cmp basic-f.O $srcdir/basic-f.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-f.E || rm -f basic-f.E
cat $srcdir/basic-f.I | $xx  > basic-f.O 2> basic-f.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-f(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-f.O $srcdir/basic-f.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-f(|)"; fi ;;
    1) $echo "Test basic-f(|) failed: files basic-f.O and $srcdir/basic-f.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-f(|) may have failed." 1>&2;
       $echo The command "cmp basic-f.O $srcdir/basic-f.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-f.E || rm -f basic-f.E
$xx  < $srcdir/basic-f.I > basic-f.O 2> basic-f.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-f(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-f.O $srcdir/basic-f.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-f(<)"; fi ;;
    1) $echo "Test basic-f(<) failed: files basic-f.O and $srcdir/basic-f.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-f(<) may have failed." 1>&2;
       $echo The command "cmp basic-f.O $srcdir/basic-f.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-f.E || rm -f basic-f.E
$xx  $srcdir/basic-g.I > basic-g.O 2> basic-g.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-g(F) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-g.O $srcdir/basic-g.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-g(F)"; fi ;;
    1) $echo "Test basic-g(F) failed: files basic-g.O and $srcdir/basic-g.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-g(F) may have failed." 1>&2;
       $echo The command "cmp basic-g.O $srcdir/basic-g.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-g.E || rm -f basic-g.E
cat $srcdir/basic-g.I | $xx  > basic-g.O 2> basic-g.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-g(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-g.O $srcdir/basic-g.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-g(|)"; fi ;;
    1) $echo "Test basic-g(|) failed: files basic-g.O and $srcdir/basic-g.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-g(|) may have failed." 1>&2;
       $echo The command "cmp basic-g.O $srcdir/basic-g.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-g.E || rm -f basic-g.E
$xx  < $srcdir/basic-g.I > basic-g.O 2> basic-g.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-g(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-g.O $srcdir/basic-g.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-g(<)"; fi ;;
    1) $echo "Test basic-g(<) failed: files basic-g.O and $srcdir/basic-g.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-g(<) may have failed." 1>&2;
       $echo The command "cmp basic-g.O $srcdir/basic-g.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-g.E || rm -f basic-g.E
$xx  $srcdir/basic-h.I > basic-h.O 2> basic-h.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-h(F) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-h.O $srcdir/basic-h.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-h(F)"; fi ;;
    1) $echo "Test basic-h(F) failed: files basic-h.O and $srcdir/basic-h.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-h(F) may have failed." 1>&2;
       $echo The command "cmp basic-h.O $srcdir/basic-h.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-h.E || rm -f basic-h.E
cat $srcdir/basic-h.I | $xx  > basic-h.O 2> basic-h.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-h(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-h.O $srcdir/basic-h.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-h(|)"; fi ;;
    1) $echo "Test basic-h(|) failed: files basic-h.O and $srcdir/basic-h.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-h(|) may have failed." 1>&2;
       $echo The command "cmp basic-h.O $srcdir/basic-h.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-h.E || rm -f basic-h.E
$xx  < $srcdir/basic-h.I > basic-h.O 2> basic-h.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-h(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-h.O $srcdir/basic-h.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-h(<)"; fi ;;
    1) $echo "Test basic-h(<) failed: files basic-h.O and $srcdir/basic-h.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-h(<) may have failed." 1>&2;
       $echo The command "cmp basic-h.O $srcdir/basic-h.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-h.E || rm -f basic-h.E
$xx  $srcdir/basic-i.I > basic-i.O 2> basic-i.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-i(F) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-i.O $srcdir/basic-i.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-i(F)"; fi ;;
    1) $echo "Test basic-i(F) failed: files basic-i.O and $srcdir/basic-i.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-i(F) may have failed." 1>&2;
       $echo The command "cmp basic-i.O $srcdir/basic-i.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-i.E || rm -f basic-i.E
cat $srcdir/basic-i.I | $xx  > basic-i.O 2> basic-i.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-i(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-i.O $srcdir/basic-i.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-i(|)"; fi ;;
    1) $echo "Test basic-i(|) failed: files basic-i.O and $srcdir/basic-i.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-i(|) may have failed." 1>&2;
       $echo The command "cmp basic-i.O $srcdir/basic-i.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-i.E || rm -f basic-i.E
$xx  < $srcdir/basic-i.I > basic-i.O 2> basic-i.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-i(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-i.O $srcdir/basic-i.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-i(<)"; fi ;;
    1) $echo "Test basic-i(<) failed: files basic-i.O and $srcdir/basic-i.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-i(<) may have failed." 1>&2;
       $echo The command "cmp basic-i.O $srcdir/basic-i.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-i.E || rm -f basic-i.E
$xx  $srcdir/basic-j.I > basic-j.O 2> basic-j.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-j(F) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-j.O $srcdir/basic-j.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-j(F)"; fi ;;
    1) $echo "Test basic-j(F) failed: files basic-j.O and $srcdir/basic-j.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-j(F) may have failed." 1>&2;
       $echo The command "cmp basic-j.O $srcdir/basic-j.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-j.E || rm -f basic-j.E
cat $srcdir/basic-j.I | $xx  > basic-j.O 2> basic-j.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-j(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-j.O $srcdir/basic-j.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-j(|)"; fi ;;
    1) $echo "Test basic-j(|) failed: files basic-j.O and $srcdir/basic-j.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-j(|) may have failed." 1>&2;
       $echo The command "cmp basic-j.O $srcdir/basic-j.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-j.E || rm -f basic-j.E
$xx  < $srcdir/basic-j.I > basic-j.O 2> basic-j.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-j(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-j.O $srcdir/basic-j.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-j(<)"; fi ;;
    1) $echo "Test basic-j(<) failed: files basic-j.O and $srcdir/basic-j.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-j(<) may have failed." 1>&2;
       $echo The command "cmp basic-j.O $srcdir/basic-j.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-j.E || rm -f basic-j.E
$xx  $srcdir/basic-k.I > basic-k.O 2> basic-k.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-k(F) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-k.O $srcdir/basic-k.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-k(F)"; fi ;;
    1) $echo "Test basic-k(F) failed: files basic-k.O and $srcdir/basic-k.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-k(F) may have failed." 1>&2;
       $echo The command "cmp basic-k.O $srcdir/basic-k.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-k.E || rm -f basic-k.E
cat $srcdir/basic-k.I | $xx  > basic-k.O 2> basic-k.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-k(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-k.O $srcdir/basic-k.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-k(|)"; fi ;;
    1) $echo "Test basic-k(|) failed: files basic-k.O and $srcdir/basic-k.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-k(|) may have failed." 1>&2;
       $echo The command "cmp basic-k.O $srcdir/basic-k.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-k.E || rm -f basic-k.E
$xx  < $srcdir/basic-k.I > basic-k.O 2> basic-k.E
code=$?
if test $code != 0 ; then
  $echo "Test basic-k(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp basic-k.O $srcdir/basic-k.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed basic-k(<)"; fi ;;
    1) $echo "Test basic-k(<) failed: files basic-k.O and $srcdir/basic-k.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test basic-k(<) may have failed." 1>&2;
       $echo The command "cmp basic-k.O $srcdir/basic-k.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s basic-k.E || rm -f basic-k.E
cat $srcdir/b2-e.I | $xx  > b2-e.O 2> b2-e.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-e(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-e.O $srcdir/b2-e.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-e(|)"; fi ;;
    1) $echo "Test b2-e(|) failed: files b2-e.O and $srcdir/b2-e.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-e(|) may have failed." 1>&2;
       $echo The command "cmp b2-e.O $srcdir/b2-e.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-e.E || rm -f b2-e.E
$xx  < $srcdir/b2-e.I > b2-e.O 2> b2-e.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-e(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-e.O $srcdir/b2-e.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-e(<)"; fi ;;
    1) $echo "Test b2-e(<) failed: files b2-e.O and $srcdir/b2-e.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-e(<) may have failed." 1>&2;
       $echo The command "cmp b2-e.O $srcdir/b2-e.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-e.E || rm -f b2-e.E
cat $srcdir/b2-f.I | $xx  > b2-f.O 2> b2-f.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-f(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-f.O $srcdir/b2-f.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-f(|)"; fi ;;
    1) $echo "Test b2-f(|) failed: files b2-f.O and $srcdir/b2-f.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-f(|) may have failed." 1>&2;
       $echo The command "cmp b2-f.O $srcdir/b2-f.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-f.E || rm -f b2-f.E
$xx  < $srcdir/b2-f.I > b2-f.O 2> b2-f.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-f(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-f.O $srcdir/b2-f.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-f(<)"; fi ;;
    1) $echo "Test b2-f(<) failed: files b2-f.O and $srcdir/b2-f.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-f(<) may have failed." 1>&2;
       $echo The command "cmp b2-f.O $srcdir/b2-f.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-f.E || rm -f b2-f.E
cat $srcdir/b2-g.I | $xx  > b2-g.O 2> b2-g.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-g(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-g.O $srcdir/b2-g.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-g(|)"; fi ;;
    1) $echo "Test b2-g(|) failed: files b2-g.O and $srcdir/b2-g.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-g(|) may have failed." 1>&2;
       $echo The command "cmp b2-g.O $srcdir/b2-g.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-g.E || rm -f b2-g.E
$xx  < $srcdir/b2-g.I > b2-g.O 2> b2-g.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-g(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-g.O $srcdir/b2-g.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-g(<)"; fi ;;
    1) $echo "Test b2-g(<) failed: files b2-g.O and $srcdir/b2-g.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-g(<) may have failed." 1>&2;
       $echo The command "cmp b2-g.O $srcdir/b2-g.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-g.E || rm -f b2-g.E
cat $srcdir/b2-h.I | $xx  > b2-h.O 2> b2-h.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-h(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-h.O $srcdir/b2-h.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-h(|)"; fi ;;
    1) $echo "Test b2-h(|) failed: files b2-h.O and $srcdir/b2-h.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-h(|) may have failed." 1>&2;
       $echo The command "cmp b2-h.O $srcdir/b2-h.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-h.E || rm -f b2-h.E
$xx  < $srcdir/b2-h.I > b2-h.O 2> b2-h.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-h(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-h.O $srcdir/b2-h.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-h(<)"; fi ;;
    1) $echo "Test b2-h(<) failed: files b2-h.O and $srcdir/b2-h.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-h(<) may have failed." 1>&2;
       $echo The command "cmp b2-h.O $srcdir/b2-h.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-h.E || rm -f b2-h.E
cat $srcdir/b2-i.I | $xx  > b2-i.O 2> b2-i.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-i(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-i.O $srcdir/b2-i.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-i(|)"; fi ;;
    1) $echo "Test b2-i(|) failed: files b2-i.O and $srcdir/b2-i.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-i(|) may have failed." 1>&2;
       $echo The command "cmp b2-i.O $srcdir/b2-i.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-i.E || rm -f b2-i.E
$xx  < $srcdir/b2-i.I > b2-i.O 2> b2-i.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-i(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-i.O $srcdir/b2-i.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-i(<)"; fi ;;
    1) $echo "Test b2-i(<) failed: files b2-i.O and $srcdir/b2-i.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-i(<) may have failed." 1>&2;
       $echo The command "cmp b2-i.O $srcdir/b2-i.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-i.E || rm -f b2-i.E
cat $srcdir/b2-j.I | $xx  > b2-j.O 2> b2-j.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-j(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-j.O $srcdir/b2-j.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-j(|)"; fi ;;
    1) $echo "Test b2-j(|) failed: files b2-j.O and $srcdir/b2-j.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-j(|) may have failed." 1>&2;
       $echo The command "cmp b2-j.O $srcdir/b2-j.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-j.E || rm -f b2-j.E
$xx  < $srcdir/b2-j.I > b2-j.O 2> b2-j.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-j(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-j.O $srcdir/b2-j.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-j(<)"; fi ;;
    1) $echo "Test b2-j(<) failed: files b2-j.O and $srcdir/b2-j.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-j(<) may have failed." 1>&2;
       $echo The command "cmp b2-j.O $srcdir/b2-j.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-j.E || rm -f b2-j.E
cat $srcdir/b2-k.I | $xx  > b2-k.O 2> b2-k.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-k(|) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-k.O $srcdir/b2-k.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-k(|)"; fi ;;
    1) $echo "Test b2-k(|) failed: files b2-k.O and $srcdir/b2-k.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-k(|) may have failed." 1>&2;
       $echo The command "cmp b2-k.O $srcdir/b2-k.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-k.E || rm -f b2-k.E
$xx  < $srcdir/b2-k.I > b2-k.O 2> b2-k.E
code=$?
if test $code != 0 ; then
  $echo "Test b2-k(<) failed: ../../src/tac return code $code differs from expected value 0" 1>&2
  errors=`expr $errors + 1`
else
  cmp b2-k.O $srcdir/b2-k.X > /dev/null 2>&1
  case $? in
    0) if test "$VERBOSE" ; then $echo "passed b2-k(<)"; fi ;;
    1) $echo "Test b2-k(<) failed: files b2-k.O and $srcdir/b2-k.X differ" 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo "Test b2-k(<) may have failed." 1>&2;
       $echo The command "cmp b2-k.O $srcdir/b2-k.X" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s b2-k.E || rm -f b2-k.E
if test $errors = 0 ; then
  $echo Passed all 48 tests. 1>&2
else
  $echo Failed $errors tests. 1>&2
fi
test $errors = 0 || errors=1
exit $errors
