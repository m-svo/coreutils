#!/bin/sh
# Make sure we give a sensible diagnostic when a cross-device `mv'
# fails, e.g., because the destination cannot be unlinked.
# This is a bit fragile since it relies on the string used
# for EPERM: `permission denied'.

if test "$VERBOSE" = yes; then
  set -x
  mv --version
fi

. $srcdir/setup
. $srcdir/../envvar-check
. $srcdir/../lang-default
PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

if test -z "$other_partition_tmpdir"; then
  exit 77
fi

pwd=`pwd`
tmp=part-fail.$$
trap 'status=$?; cd $pwd; chmod u+w $other_partition_tmpdir;rm -rf $tmp $other_partition_tmpdir && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

framework_failure=0
mkdir $tmp || framework_failure=1
cd $tmp || framework_failure=1
touch k $other_partition_tmpdir/k || framework_failure=1
chmod u-w $other_partition_tmpdir || framework_failure=1

if test $framework_failure = 1; then
  echo '$0: failure in testing framework' 1>&2
  (exit 1); exit
fi

fail=0

mv -f k $other_partition_tmpdir 2> out && fail=1
cat <<EOF > exp
mv: inter-device move failed: \`k' to \`$other_partition_tmpdir/k';  unable to remove target: Permission denied
EOF

cmp out exp || fail=1
test $fail = 1 && diff out exp 2> /dev/null

(exit $fail); exit
