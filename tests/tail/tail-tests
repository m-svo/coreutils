#! /bin/sh
# This script was generated automatically by build-script.
case $# in
  0) xx='../../src/tail';;
  *) xx="$1";;
esac
test "$VERBOSE" && echo=echo || echo=:
$echo testing program: $xx
errors=0
test "$srcdir" || srcdir=.
test "$VERBOSE" && $xx --version 2> /dev/null
$xx +2c < $srcdir/tobs-c1.in > tobs-c1.out 2> tobs-c1.err
code=$?
if test $code != 0 ; then
  $echo Test obs-c1 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-c1.out $srcdir/tobs-c1.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-c1; fi ;; # equal files
    1) $echo Test obs-c1 failed: files tobs-c1.out and $srcdir/tobs-c1.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-c1 may have failed. 1>&2;
       $echo The command "cmp tobs-c1.out $srcdir/tobs-c1.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-c1.err || rm -f tobs-c1.err
$xx +8c < $srcdir/tobs-c2.in > tobs-c2.out 2> tobs-c2.err
code=$?
if test $code != 0 ; then
  $echo Test obs-c2 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-c2.out $srcdir/tobs-c2.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-c2; fi ;; # equal files
    1) $echo Test obs-c2 failed: files tobs-c2.out and $srcdir/tobs-c2.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-c2 may have failed. 1>&2;
       $echo The command "cmp tobs-c2.out $srcdir/tobs-c2.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-c2.err || rm -f tobs-c2.err
$xx -1c < $srcdir/tobs-c3.in > tobs-c3.out 2> tobs-c3.err
code=$?
if test $code != 0 ; then
  $echo Test obs-c3 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-c3.out $srcdir/tobs-c3.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-c3; fi ;; # equal files
    1) $echo Test obs-c3 failed: files tobs-c3.out and $srcdir/tobs-c3.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-c3 may have failed. 1>&2;
       $echo The command "cmp tobs-c3.out $srcdir/tobs-c3.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-c3.err || rm -f tobs-c3.err
$xx -9c < $srcdir/tobs-c4.in > tobs-c4.out 2> tobs-c4.err
code=$?
if test $code != 0 ; then
  $echo Test obs-c4 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-c4.out $srcdir/tobs-c4.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-c4; fi ;; # equal files
    1) $echo Test obs-c4 failed: files tobs-c4.out and $srcdir/tobs-c4.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-c4 may have failed. 1>&2;
       $echo The command "cmp tobs-c4.out $srcdir/tobs-c4.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-c4.err || rm -f tobs-c4.err
$xx -12c < $srcdir/tobs-c5.in > tobs-c5.out 2> tobs-c5.err
code=$?
if test $code != 0 ; then
  $echo Test obs-c5 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-c5.out $srcdir/tobs-c5.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-c5; fi ;; # equal files
    1) $echo Test obs-c5 failed: files tobs-c5.out and $srcdir/tobs-c5.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-c5 may have failed. 1>&2;
       $echo The command "cmp tobs-c5.out $srcdir/tobs-c5.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-c5.err || rm -f tobs-c5.err
$xx -1l < $srcdir/tobs-l1.in > tobs-l1.out 2> tobs-l1.err
code=$?
if test $code != 0 ; then
  $echo Test obs-l1 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-l1.out $srcdir/tobs-l1.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-l1; fi ;; # equal files
    1) $echo Test obs-l1 failed: files tobs-l1.out and $srcdir/tobs-l1.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-l1 may have failed. 1>&2;
       $echo The command "cmp tobs-l1.out $srcdir/tobs-l1.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-l1.err || rm -f tobs-l1.err
$xx -1l < $srcdir/tobs-l2.in > tobs-l2.out 2> tobs-l2.err
code=$?
if test $code != 0 ; then
  $echo Test obs-l2 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-l2.out $srcdir/tobs-l2.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-l2; fi ;; # equal files
    1) $echo Test obs-l2 failed: files tobs-l2.out and $srcdir/tobs-l2.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-l2 may have failed. 1>&2;
       $echo The command "cmp tobs-l2.out $srcdir/tobs-l2.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-l2.err || rm -f tobs-l2.err
$xx -1l < $srcdir/tobs-l3.in > tobs-l3.out 2> tobs-l3.err
code=$?
if test $code != 0 ; then
  $echo Test obs-l3 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-l3.out $srcdir/tobs-l3.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-l3; fi ;; # equal files
    1) $echo Test obs-l3 failed: files tobs-l3.out and $srcdir/tobs-l3.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-l3 may have failed. 1>&2;
       $echo The command "cmp tobs-l3.out $srcdir/tobs-l3.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-l3.err || rm -f tobs-l3.err
$xx +1l < $srcdir/tobs-l4.in > tobs-l4.out 2> tobs-l4.err
code=$?
if test $code != 0 ; then
  $echo Test obs-l4 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-l4.out $srcdir/tobs-l4.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-l4; fi ;; # equal files
    1) $echo Test obs-l4 failed: files tobs-l4.out and $srcdir/tobs-l4.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-l4 may have failed. 1>&2;
       $echo The command "cmp tobs-l4.out $srcdir/tobs-l4.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-l4.err || rm -f tobs-l4.err
$xx +2l < $srcdir/tobs-l5.in > tobs-l5.out 2> tobs-l5.err
code=$?
if test $code != 0 ; then
  $echo Test obs-l5 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-l5.out $srcdir/tobs-l5.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-l5; fi ;; # equal files
    1) $echo Test obs-l5 failed: files tobs-l5.out and $srcdir/tobs-l5.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-l5 may have failed. 1>&2;
       $echo The command "cmp tobs-l5.out $srcdir/tobs-l5.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-l5.err || rm -f tobs-l5.err
$xx -1 < $srcdir/tobs-1.in > tobs-1.out 2> tobs-1.err
code=$?
if test $code != 0 ; then
  $echo Test obs-1 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-1.out $srcdir/tobs-1.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-1; fi ;; # equal files
    1) $echo Test obs-1 failed: files tobs-1.out and $srcdir/tobs-1.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-1 may have failed. 1>&2;
       $echo The command "cmp tobs-1.out $srcdir/tobs-1.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-1.err || rm -f tobs-1.err
$xx -1 < $srcdir/tobs-2.in > tobs-2.out 2> tobs-2.err
code=$?
if test $code != 0 ; then
  $echo Test obs-2 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-2.out $srcdir/tobs-2.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-2; fi ;; # equal files
    1) $echo Test obs-2 failed: files tobs-2.out and $srcdir/tobs-2.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-2 may have failed. 1>&2;
       $echo The command "cmp tobs-2.out $srcdir/tobs-2.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-2.err || rm -f tobs-2.err
$xx -1 < $srcdir/tobs-3.in > tobs-3.out 2> tobs-3.err
code=$?
if test $code != 0 ; then
  $echo Test obs-3 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-3.out $srcdir/tobs-3.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-3; fi ;; # equal files
    1) $echo Test obs-3 failed: files tobs-3.out and $srcdir/tobs-3.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-3 may have failed. 1>&2;
       $echo The command "cmp tobs-3.out $srcdir/tobs-3.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-3.err || rm -f tobs-3.err
$xx +1 < $srcdir/tobs-4.in > tobs-4.out 2> tobs-4.err
code=$?
if test $code != 0 ; then
  $echo Test obs-4 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-4.out $srcdir/tobs-4.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-4; fi ;; # equal files
    1) $echo Test obs-4 failed: files tobs-4.out and $srcdir/tobs-4.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-4 may have failed. 1>&2;
       $echo The command "cmp tobs-4.out $srcdir/tobs-4.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-4.err || rm -f tobs-4.err
$xx +2 < $srcdir/tobs-5.in > tobs-5.out 2> tobs-5.err
code=$?
if test $code != 0 ; then
  $echo Test obs-5 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobs-5.out $srcdir/tobs-5.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obs-5; fi ;; # equal files
    1) $echo Test obs-5 failed: files tobs-5.out and $srcdir/tobs-5.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obs-5 may have failed. 1>&2;
       $echo The command "cmp tobs-5.out $srcdir/tobs-5.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobs-5.err || rm -f tobs-5.err
$xx +c < $srcdir/tobsx-1.in > tobsx-1.out 2> tobsx-1.err
code=$?
if test $code != 0 ; then
  $echo Test obsx-1 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobsx-1.out $srcdir/tobsx-1.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obsx-1; fi ;; # equal files
    1) $echo Test obsx-1 failed: files tobsx-1.out and $srcdir/tobsx-1.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obsx-1 may have failed. 1>&2;
       $echo The command "cmp tobsx-1.out $srcdir/tobsx-1.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobsx-1.err || rm -f tobsx-1.err
$xx +l < $srcdir/tobsx-2.in > tobsx-2.out 2> tobsx-2.err
code=$?
if test $code != 0 ; then
  $echo Test obsx-2 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tobsx-2.out $srcdir/tobsx-2.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed obsx-2; fi ;; # equal files
    1) $echo Test obsx-2 failed: files tobsx-2.out and $srcdir/tobsx-2.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test obsx-2 may have failed. 1>&2;
       $echo The command "cmp tobsx-2.out $srcdir/tobsx-2.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tobsx-2.err || rm -f tobsx-2.err
$xx +cl < $srcdir/terr-1.in > terr-1.out 2> terr-1.err
code=$?
if test $code != 1 ; then
  $echo Test err-1 failed: ../../src/tail return code $code differs from expected value 1 1>&2
  errors=`expr $errors + 1`
else
  cmp terr-1.out $srcdir/terr-1.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed err-1; fi ;; # equal files
    1) $echo Test err-1 failed: files terr-1.out and $srcdir/terr-1.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test err-1 may have failed. 1>&2;
       $echo The command "cmp terr-1.out $srcdir/terr-1.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s terr-1.err || rm -f terr-1.err
$xx -cl < $srcdir/terr-2.in > terr-2.out 2> terr-2.err
code=$?
if test $code != 1 ; then
  $echo Test err-2 failed: ../../src/tail return code $code differs from expected value 1 1>&2
  errors=`expr $errors + 1`
else
  cmp terr-2.out $srcdir/terr-2.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed err-2; fi ;; # equal files
    1) $echo Test err-2 failed: files terr-2.out and $srcdir/terr-2.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test err-2 may have failed. 1>&2;
       $echo The command "cmp terr-2.out $srcdir/terr-2.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s terr-2.err || rm -f terr-2.err
$xx -c99999999999999999999 < $srcdir/terr-3.in > terr-3.out 2> terr-3.err
code=$?
if test $code != 1 ; then
  $echo Test err-3 failed: ../../src/tail return code $code differs from expected value 1 1>&2
  errors=`expr $errors + 1`
else
  cmp terr-3.out $srcdir/terr-3.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed err-3; fi ;; # equal files
    1) $echo Test err-3 failed: files terr-3.out and $srcdir/terr-3.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test err-3 may have failed. 1>&2;
       $echo The command "cmp terr-3.out $srcdir/terr-3.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s terr-3.err || rm -f terr-3.err
$xx -c < $srcdir/terr-4.in > terr-4.out 2> terr-4.err
code=$?
if test $code != 1 ; then
  $echo Test err-4 failed: ../../src/tail return code $code differs from expected value 1 1>&2
  errors=`expr $errors + 1`
else
  cmp terr-4.out $srcdir/terr-4.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed err-4; fi ;; # equal files
    1) $echo Test err-4 failed: files terr-4.out and $srcdir/terr-4.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test err-4 may have failed. 1>&2;
       $echo The command "cmp terr-4.out $srcdir/terr-4.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s terr-4.err || rm -f terr-4.err
$xx - < $srcdir/tstdin-1.in > tstdin-1.out 2> tstdin-1.err
code=$?
if test $code != 0 ; then
  $echo Test stdin-1 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tstdin-1.out $srcdir/tstdin-1.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed stdin-1; fi ;; # equal files
    1) $echo Test stdin-1 failed: files tstdin-1.out and $srcdir/tstdin-1.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test stdin-1 may have failed. 1>&2;
       $echo The command "cmp tstdin-1.out $srcdir/tstdin-1.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tstdin-1.err || rm -f tstdin-1.err
$xx - < $srcdir/tstdin-2.in > tstdin-2.out 2> tstdin-2.err
code=$?
if test $code != 0 ; then
  $echo Test stdin-2 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tstdin-2.out $srcdir/tstdin-2.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed stdin-2; fi ;; # equal files
    1) $echo Test stdin-2 failed: files tstdin-2.out and $srcdir/tstdin-2.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test stdin-2 may have failed. 1>&2;
       $echo The command "cmp tstdin-2.out $srcdir/tstdin-2.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tstdin-2.err || rm -f tstdin-2.err
$xx -l 10 < $srcdir/tstdin-3.in > tstdin-3.out 2> tstdin-3.err
code=$?
if test $code != 0 ; then
  $echo Test stdin-3 failed: ../../src/tail return code $code differs from expected value 0 1>&2
  errors=`expr $errors + 1`
else
  cmp tstdin-3.out $srcdir/tstdin-3.exp
  case $? in
    0) if test "$VERBOSE" ; then $echo passed stdin-3; fi ;; # equal files
    1) $echo Test stdin-3 failed: files tstdin-3.out and $srcdir/tstdin-3.exp differ 1>&2;
       errors=`expr $errors + 1` ;;
    2) $echo Test stdin-3 may have failed. 1>&2;
       $echo The command "cmp tstdin-3.out $srcdir/tstdin-3.exp" failed. 1>&2 ;
       errors=`expr $errors + 1` ;;
  esac
fi
test -s tstdin-3.err || rm -f tstdin-3.err
if test $errors = 0 ; then
  $echo Passed all 24 tests. 1>&2
else
  $echo Failed $errors tests. 1>&2
fi
test $errors = 0 || errors=1
exit $errors
